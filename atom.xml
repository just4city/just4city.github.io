<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://just4city.github.io</id>
    <title>Gridea</title>
    <updated>2019-11-11T02:43:00.744Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://just4city.github.io"/>
    <link rel="self" href="https://just4city.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://just4city.github.io/images/avatar.png</logo>
    <icon>https://just4city.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[解决oh-my-zsh docker不自动补全问题]]></title>
        <id>https://just4city.github.io/post/jie-jue-oh-my-zsh-docker-bu-zi-dong-bu-quan-wen-ti</id>
        <link href="https://just4city.github.io/post/jie-jue-oh-my-zsh-docker-bu-zi-dong-bu-quan-wen-ti">
        </link>
        <updated>2019-11-11T02:39:17.000Z</updated>
        <content type="html"><![CDATA[<p>问题，如图所示：<br>
<img src="https://cdn.jsdelivr.net/gh/just4picbed/oss@master//20191111104208-kNMNmH.jpg" alt=""></p>
<p>解决办法：</p>
<pre><code class="language-bash">rm ~/.zcompdump*
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ Docker中删除images报错]]></title>
        <id>https://just4city.github.io/post/docker-zhong-shan-chu-images-bao-cuo</id>
        <link href="https://just4city.github.io/post/docker-zhong-shan-chu-images-bao-cuo">
        </link>
        <updated>2019-11-10T06:59:00.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-bash">[root@hadoop14 ~]# docker rmi ubuntu:v2
Failed to remove image (ubuntu:v2): Error response from daemon: conflict: unable to remove repository reference &quot;ubuntu:v2&quot; (must force) - container d63a819c3eaf is using its referenced image a8edd5cf3708
</code></pre>
<p>原因：<code>Docker无法删除images，由于是依赖container</code><br>
步骤：</p>
<pre><code>- docker rm b23dd9de7382(删除依赖的container d63a819c3eaf)
- 可能有多个依赖，全部删除
</code></pre>
<p>停止所有的container，这样才能够删除其中的images：</p>
<pre><code class="language-bash">docker stop $(docker ps -a -q)
</code></pre>
<p>如果想要删除所有container的话再加一个指令：</p>
<pre><code class="language-bash">docker rm $(docker ps -a -q)
</code></pre>
<p>查看当前有些什么images</p>
<pre><code class="language-bash">docker images
</code></pre>
<p>删除images，通过image的id来指定删除谁</p>
<pre><code class="language-bash">docker rmi [IMAGE ID]
</code></pre>
<p>想要删除untagged images，也就是那些id为的image的话可以用</p>
<pre><code class="language-bash">docker rmi  $(docker images | grep &quot;^&lt;none&gt;&quot; | awk &quot;{print $3}&quot;)
</code></pre>
<p>要删除全部image的话</p>
<pre><code class="language-bash">docker rmi $(docker images -q)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[新购买的VPS如何配置]]></title>
        <id>https://just4city.github.io/post/xin-gou-mai-de-vps-ru-he-pei-zhi</id>
        <link href="https://just4city.github.io/post/xin-gou-mai-de-vps-ru-he-pei-zhi">
        </link>
        <updated>2019-11-07T14:04:15.000Z</updated>
        <summary type="html"><![CDATA[<p>由于经常安装云服务器，再次记录下。</p>
]]></summary>
        <content type="html"><![CDATA[<p>由于经常安装云服务器，再次记录下。</p>
<!--more-->
<h2 id="安装相关包">安装相关包</h2>
<pre><code class="language-bash">yum install -y gcc
yum install -y openssl
yum install -y openssl-devel
yum install -y zlib-devel
yum install -y git
yum install -y unzip
</code></pre>
<h2 id="禁用密码登陆使用秘钥登陆">禁用密码登陆，使用秘钥登陆</h2>
<pre><code class="language-bash">vim /etc/ssh/sshd_config

# 是否让 sshd 去检查用户家目录或相关档案的权限数据，
# 这是为了担心使用者将某些重要档案的权限设错，可能会导致一些问题所致。
# 例如使用者的 ~.ssh/ 权限设错时，某些特殊情况下会不许用户登入
StrictModes no
# 是否允许用户自行使用成对的密钥系统进行登入行为，仅针对 version 2。
# 至于自制的公钥数据就放置于用户家目录下的 .ssh/authorized_keys 内
RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile      %h/.ssh/authorized_keys
#有了证书登录了，就禁用密码登录吧，安全要紧
PasswordAuthentication no

#重启服务

#ubuntu
/etc/init.d/ssh restart

#centos
service sshd restart

</code></pre>
<h2 id="升级vim8">升级VIM8</h2>
<pre><code class="language-bash">yum install ncurses-devel
wget https://github.com/vim/vim/archive/v8.0.1376.zip
unzip master.zip
cd vim-master
cd src/
./configure
make
sudo make install
vim

//配置增强版VIM
//安装
bash &lt;(curl -fsSL https://raw.githubusercontent.com/liuchengxu/space-vim/master/install.sh)
//卸载
bash &lt;(curl -fsSL https://raw.githubusercontent.com/liuchengxu/space-vim/master/uninstall.sh)

</code></pre>
<h2 id="安装oh-my-zsh">安装oh-my-zsh</h2>
<pre><code class="language-bash">//安装zsh
yum -y install zsh

//切换shell
chsh -s /bin/zsh

//安装oh my zsh
//curl
sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;
//wget 
sh -c &quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&quot;

//添加插件
git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions

//vim .zshrc中找到plugins
//plugins=(zsh-autosuggestions)
</code></pre>
<h2 id="安装python3">安装Python3</h2>
<pre><code class="language-bash">wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz
tar xzvf Python-3.6.1.tgz
</code></pre>
<p>修改Pyhton3安装配置 解决SSL模块无法使用问题</p>
<pre><code class="language-bash">vim Modules/Setup.dist 或
vim Modules/Setup
# Socket module helper for socket(2)
_socket socketmodule.c timemodule.c
# Socket module helper for SSL support; you must comment out the other
# socket line above, and possibly edit the SSL variable:
#SSL=/usr/local/ssl
_ssl _ssl.c \
-DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \
-L$(SSL)/lib -lssl -lcrypto
</code></pre>
<h5 id="安装python3-2">安装Python3</h5>
<pre><code class="language-bash">cd Python-3.6.1
mkdir /usr/local/python3.6
./configure --prefix=/usr/local/python3.6
make
make install
</code></pre>
<h5 id="替换原有的python链接">替换原有的Python链接</h5>
<pre><code class="language-bash">mv /usr/bin/python /usr/bin/python_bak
ln -s /usr/local/python3.1/bin/python3.1  /usr/bin/python 
注意要修改yum文件，yum依赖系统的python
vim /usr/bin/yum
打开文件后，将/usr/bin/python修改成/usr/bin/python_bak即可

</code></pre>
<h2 id="安装ufw">安装ufw</h2>
<pre><code>//ubuntu
apt-get install ufw -y 

//debian
apt-get install ufw -y

//center os
yum install epel-release -y
yum install --enablerepo=&quot;epel&quot; ufw -y

</code></pre>
<h2 id="ufw相关配置">ufw相关配置</h2>
<p><a href="https://linuxconfig.org/how-to-install-and-use-ufw-firewall-on-linux">https://linuxconfig.org/how-to-install-and-use-ufw-firewall-on-linux</a></p>
<p><a href="http://notes.maxwi.com/2017/01/19/linux-command-tools-ufw">http://notes.maxwi.com/2017/01/19/linux-command-tools-ufw</a></p>
<pre><code class="language-bash">//默认配置
ufw default deny incoming
ufw default allow outgoing
</code></pre>
<h2 id="cloudflare-ufw配置">cloudflare ufw配置</h2>
<p><code>cloudflare-ufw.sh</code>, <a href="https://github.com/Paul-Reed/cloudflare-ufw/blob/master/cloudflare-ufw.sh">参考链接</a>:</p>
<pre><code class="language-bash">#!/bin/sh

DIR=&quot;$(dirname $(readlink -f $0))&quot;
cd $DIR
wget https://www.cloudflare.com/ips-v4 -O ips-v4.tmp
wget https://www.cloudflare.com/ips-v6 -O ips-v6.tmp
mv ips-v4.tmp ips-v4
mv ips-v6.tmp ips-v6

for cfip in `cat ips-v4`; do ufw allow from $cfip; done
for cfip in `cat ips-v6`; do ufw allow from $cfip; done

ufw reload &gt; /dev/null

# OTHER EXAMPLE RULES
# Examples to retrict to port 80
#for cfip in `cat ips-v4`; do ufw allow from $cfip to any port 80 proto tcp; done
#for cfip in `cat ips-v6`; do ufw allow from $cfip to any port 80 proto tcp; done

# Examples to restrict to port 443
#for cfip in `cat ips-v4`; do ufw allow from $cfip to any port 443 proto tcp; done
#for cfip in `cat ips-v6`; do ufw allow from $cfip to any port 443 proto tcp; done

</code></pre>
<p>配置运行：</p>
<pre><code class="language-bash">sudo crontab -e

0 0 * * 1 /opt/cloudflare/cloudflare-ufw.sh &gt; /dev/null 2&gt;&amp;1
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue中import引入模块路径中@符号是什么意思]]></title>
        <id>https://just4city.github.io/post/vue-zhong-import-yin-ru-mo-kuai-lu-jing-zhong-fu-hao-shi-shi-me-yi-si</id>
        <link href="https://just4city.github.io/post/vue-zhong-import-yin-ru-mo-kuai-lu-jing-zhong-fu-hao-shi-shi-me-yi-si">
        </link>
        <updated>2019-11-07T14:01:37.000Z</updated>
        <content type="html"><![CDATA[<p>在编写vue文件中引入模块</p>
<pre><code class="language-javascript">import model from &quot;@/common/model&quot;;
这里路径前面的“@”符号表示什么意思？
</code></pre>
<pre><code class="language-javascript">resolve: {
    // 自动补全的扩展名
    extensions: ['.js', '.vue', '.json'],
    // 默认路径代理
    // 例如 import Vue from 'vue'，会自动到 'vue/dist/vue.common.js'中寻找
    alias: {
        '@': resolve('src'),
        '@config': resolve('config'),
        'vue$': 'vue/dist/vue.common.js'
    }
}
</code></pre>
<p>@ 等价于 /src 这个目录，避免写麻烦又易错的相对路径</p>
<p>参考来源：https://www.cnblogs.com/boshow/p/8758927.html</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://just4city.github.io/post/hello-gridea</id>
        <link href="https://just4city.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>